// Phantom 1 batterie cover

$fn=40;
fn1=80;

it=[-1,1];

use<capot_LoopginZig.scad>;

cover();

module cover()
{
  difference()
  {
    cover_plain();
    cover_void();
    translate([9, 0, -2.8]) writing();
    //translate([-.5, 0, -3]) rotate([0, 0, -90]) mirror([1, 0, 0]) loopingzig(0.60000002384185791);
  }
  
  fixation();
  
  supports();
  
  axis();
  
 /* 
  color("blue") translate([-20, 0, 40])cube([1.5, 1.5, 10]);
  color("blue") translate([18.5, 0, 40])cube([1.5, 1.5, 10]);
  color("blue") translate([0, 25.8, 40])cube([1.5, 1.5, 10]);
  color("blue") translate([0, -27.3, 40])cube([1.5, 1.5, 10]);
  /**/
}

module cover_plain()
{
  // base
  form();
}

module cover_void()
{
  // checking cube
  //translate([0, -50, -3]) cube([50, 50, 50]);

  // base removing
  *translate([0, 0, 1.5]) scale([.957, .97, 1.1]) form();
  translate([0, 0, 1.5]) scale([.93, .95, 1.1]) form();
  
  // bottom
  *color("red") translate([-21, 0, 104]) rotate([0, 90, 0]) cylinder(r=80, h=5, $fn=fn1);
  color("red") translate([-21, 0, 110]) scale([1, 1.1, 1]) rotate([0, 90, 0]) cylinder(r1=86, r2=85.7, h=5, $fn=fn1);
  
  // side
  color("red") difference()
  {
    for(i=it) translate([-12.5, i*26, 87.5]) rotate([90, 0, 0]) cylinder(r=60, h=10, center=true, $fn=fn1);
    translate([20.5-2, -100/2, 25]) cube([8, 100, 20]);
  }
  color("orange") hull()
  {
    translate([16.99, 0, 38.3]) rotate([90, 0, 0]) cylinder(r=1.7, h=55, center=true, $fn=fn1);
    translate([17.85, 0, 36.65]) rotate([90, 0, 0]) cylinder(r=.8, h=55, center=true, $fn=fn1);
  }
  
  // fix cutting
  translate([18, 1, 33]) 
  {
    cube([5, 1, 14]);
    translate([0, 11, 0]) cube([5, 1, 14]);
  }

  difference()
  {
    translate([17.5, 1, 40]) cube([5, 11, 10]);
    translate([17.5, 0, -1])  intersection()
    {
      translate([0, 0, -3.5]) rotate([0, 90, 0]) cylinder(r=48, h=5.5, $fn=fn1);
      translate([0, -48/2, 25]) cube([5.5, 48, 20]);
    }
  }
}

module form()
{
  hull()
  {
    for(i=it) for(j=it) translate([i*34/2, 0, 0]) translate([0, j*48.5/2, 0]) sphere(r=3);
    
    translate([20, 0, 0])  intersection()
    {
      translate([0, 0, -3.5]) rotate([0, 90, 0]) cylinder(r=48, h=.1, $fn=fn1);
      translate([0, -48/2, 25]) cube([.1, 48, 20]);
    }
    
    translate([17, 0, 34]) hull() for(i=it) translate([0, i*48.5/2, 0]) sphere(r=3);
    translate([-17, 0, 26.5]) hull() for(i=it) translate([0, i*48.5/2, 0]) sphere(r=3);
  }
}

module fixation()
{
  hull()
  {
    translate([16.5, 1, -1])  intersection()
    {
      translate([0, 1, -3.5]) rotate([0, 90, 0]) cylinder(r=48, h=3, $fn=fn1);
      translate([0, 1, 36]) cube([3, 10, 10]);
    }
    translate([19.5, 2, 28]) cube([.1, 10, 1]);
  }
  translate([16.5, 2, 41]) cube([1.5, 10, 6]);
  hull()
  {
    translate([16.5, 2, 47.2]) cube([.4, 10, 2]);
    translate([16.5, 2, 46.6]) cube([3.6, 10, .2]);
  }
}


module supports()
{
  for(i=it)
  {
    // bottom
	translate([0, -1, 0]) hull() translate([-19.3, i*14, -1.8])
    {
      cube([3, 2, .1]);
      translate([-.3, 0, 25]) cube([1, 2, 1]);
    }
    hull() translate([-19.3, -1, -1.8])
    {
      cube([3, 2, .1]);
      translate([-.3, 0, 24]) cube([1, 2, 1]);
    }
    
    // top
    translate([0, 6, 0]) hull() translate([16.3, i*7, -1.8])
    {
      cube([3, 2, 1]);
      translate([2.4, 0, (i==1)?42.5:44]) cube([1, 2, 1]);
    }
    hull() translate([16.3, -14, -1.8])
    {
      cube([3, 2, 1]);
      translate([2.4, 0, 42.5]) cube([1, 2, 1]);
    }
    
    // sides
    hull() translate([i*6.5, 23.5, -1.8])
    {
      cube([2, 3, .1]);
      translate([0, 2.4, (i==-1)?28:31]) cube([2, 1, 1]);
    }    
    hull() translate([i*6.5, -26.5, -1.8])
    {
      cube([2, 3, .1]);
      translate([0, -.4, (i==-1)?28:31]) cube([2, 1, 1]);
    } 
    
    // for printing
    color("orange") translate([2.4, 1, 0]) hull()
    {
      difference()
      {
        translate([17, 1, 40]) cube([.4, 10, 6.54]);
        translate([17.1, 0, -1])  intersection()
        {
          translate([0, 0, -3.5]) rotate([0, 90, 0]) cylinder(r=48, h=.7, $fn=fn1);
          translate([0, -48/2, 25]) cube([.7, 48, 20]);
        }
      }
      translate([17.4, 1, 46.44]) cube([.3, 10, .1]);
    }   
  }
}

module axis()
{
  difference()
  {
    hull()
    {
      translate([-22.5, 0, 22]) rotate([90, 0, 0]) cylinder(r=2.4, h=15.5, center=true);
      translate([-20, 0, 23.4]) cube([1, 15.5, 1], true);
      translate([-19.75, 0, 15]) cube([.1, 15.5, 1], true);
    }
    translate([-22.5, 0, 22]) rotate([90, 0, 0]) cylinder(r=1.1, h=16, center=true);
  }
}

module writing()
{
  hull()
  {
    cylinder(r=.6, h=.8, center=true);
    for(i=it) translate([-3.3, i*2, 0]) cylinder(r=.6, h=.8, center=true);
  }
  
  translate([-12, 0, -.2]) rotate([0, 0, -90]) mirror([1, 0, 0]) battery(0.60000000596046448);
}

fudge = 0.1;

module battery(h)
{
  scale([25.4/90, -25.4/90, 1]) union()
  {
    difference()
    {
       linear_extrude(height=h)
         polygon([[-79.625000,-11.453125],[-79.625000,11.453125],[-71.812500,11.453125],[-66.250000,11.296875],[-64.554700,10.917963],[-63.156250,10.203125],[-62.019546,9.175775],[-61.156250,7.859375],[-60.613297,6.347662],[-60.437500,4.796875],[-60.718766,2.949200],[-61.070324,2.123509],[-61.562500,1.359375],[-62.185557,0.676262],[-62.929702,0.097663],[-63.794932,-0.373519],[-64.781250,-0.734375],[-63.453139,-1.566375],[-62.437500,-2.734375],[-61.781265,-4.152337],[-61.562500,-5.703125],[-61.730484,-7.105462],[-62.250000,-8.359375],[-63.050795,-9.449212],[-64.031250,-10.296875],[-65.144544,-10.890575],[-66.406250,-11.234375],[-68.089854,-11.402363],[-70.468750,-11.453125],[-79.625000,-11.453125]]);
       translate([0, 0, -fudge])
         linear_extrude(height=h+2*fudge)
           polygon([[-75.000000,-7.640625],[-72.343750,-7.640625],[-68.375000,-7.578125],[-67.371105,-7.304700],[-66.656250,-6.765625],[-66.210949,-6.007800],[-66.062500,-5.046875],[-66.234387,-4.035138],[-66.750000,-3.234375],[-67.542979,-2.695412],[-68.593750,-2.421875],[-71.968750,-2.359375],[-75.000000,-2.359375],[-75.000000,-7.640625]]);
       translate([0, 0, -fudge])
         linear_extrude(height=h+2*fudge)
           polygon([[-75.000000,1.453125],[-71.250000,1.453125],[-68.648448,1.542950],[-67.156250,1.796875],[-66.324230,2.214850],[-65.718750,2.828125],[-65.343762,3.625012],[-65.218750,4.578125],[-65.382825,5.683588],[-65.875000,6.546875],[-66.605480,7.132787],[-67.531250,7.453125],[-70.718750,7.578125],[-75.000000,7.578125],[-75.000000,1.453125]]);
    }
    difference()
    {
       linear_extrude(height=h)
         polygon([[-47.593750,-11.453125],[-56.531250,11.453125],[-51.625000,11.453125],[-49.718750,6.234375],[-40.562500,6.234375],[-38.562500,11.453125],[-33.531250,11.453125],[-42.718750,-11.453125],[-47.593750,-11.453125]]);
       translate([0, 0, -fudge])
         linear_extrude(height=h+2*fudge)
           polygon([[-45.218750,-6.109375],[-42.062500,2.390625],[-48.312500,2.390625],[-45.218750,-6.109375]]);
    }
    linear_extrude(height=h)
      polygon([[-32.781250,-11.453125],[-32.781250,-7.578125],[-25.968750,-7.578125],[-25.968750,11.453125],[-21.343750,11.453125],[-21.343750,-7.578125],[-14.562500,-7.578125],[-14.562500,-11.453125],[-32.781250,-11.453125]]);
    linear_extrude(height=h)
      polygon([[-10.906250,-11.453125],[-10.906250,-7.578125],[-4.093750,-7.578125],[-4.093750,11.453125],[0.531250,11.453125],[0.531250,-7.578125],[7.312500,-7.578125],[7.312500,-11.453125],[-10.906250,-11.453125]]);
    linear_extrude(height=h)
      polygon([[12.625000,-11.453125],[12.625000,11.453125],[30.031250,11.453125],[30.031250,7.578125],[17.250000,7.578125],[17.250000,1.359375],[28.750000,1.359375],[28.750000,-2.515625],[17.250000,-2.515625],[17.250000,-7.578125],[29.593750,-7.578125],[29.593750,-11.453125],[12.625000,-11.453125]]);
    difference()
    {
       linear_extrude(height=h)
         polygon([[36.312500,-11.453125],[36.312500,11.453125],[40.937500,11.453125],[40.937500,1.890625],[41.875000,1.890625],[43.261716,1.949250],[44.218750,2.140625],[44.925772,2.511712],[45.593750,3.109375],[48.031250,6.453125],[51.375000,11.453125],[56.906250,11.453125],[54.125000,6.984375],[52.628894,4.718725],[51.468750,3.265625],[50.367178,2.253937],[49.000000,1.328125],[50.414054,1.034698],[51.640614,0.589875],[52.679680,-0.009261],[53.531250,-0.765625],[54.196768,-1.667473],[54.675768,-2.683575],[54.965321,-3.811014],[55.062500,-5.046875],[54.812486,-6.957000],[54.062500,-8.640625],[52.886705,-9.976588],[51.375000,-10.828125],[49.222645,-11.296888],[46.062500,-11.453125],[36.312500,-11.453125]]);
       translate([0, 0, -fudge])
         linear_extrude(height=h+2*fudge)
           polygon([[40.937500,-7.578125],[44.562500,-7.578125],[47.937500,-7.515625],[48.925770,-7.195288],[49.656250,-6.609375],[50.124990,-5.785125],[50.281250,-4.734375],[50.164055,-3.789087],[49.812500,-3.015625],[49.261710,-2.429700],[48.531250,-2.046875],[47.078115,-1.836012],[44.375000,-1.765625],[40.937500,-1.765625],[40.937500,-7.578125]]);
    }
    linear_extrude(height=h)
      polygon([[58.187500,-11.453125],[66.593750,1.796875],[66.593750,11.453125],[71.187500,11.453125],[71.187500,1.828125],[79.625000,-11.453125],[74.281250,-11.453125],[69.000000,-2.390625],[63.625000,-11.453125],[58.187500,-11.453125]]);
  }
}


